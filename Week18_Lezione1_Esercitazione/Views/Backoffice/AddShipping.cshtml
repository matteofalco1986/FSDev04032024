@model Week18_Lezione1_Esercitazione.Models.Spedizioni
@{
    ViewBag.Title = "AddShipping";
}

<h2 class="mt-3">Aggiungi una spedizione</h2>


<div class="mt-3">
    @using (Html.BeginForm("AddShipping", "Backoffice", new { Area = "" }, FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.StatoSpedizioneId, new { Value = "4" })

        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.ClienteId, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.ClienteId, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("ClienteId") ? "" : "is-invalid")}", type = "number" } })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.Peso, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.Peso, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("Peso") ? "" : "is-invalid")}", type = "number", step = "0.01" } })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.CostoSpedizione, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.CostoSpedizione, new { htmlAttributes = new { @class = $"form-control  {(ViewData.ModelState.IsValidField("CostoSpedizione") ? "" : "is-invalid")}", type = "number", step = "0.01" } })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.DataSpedizione, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.DataSpedizione, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("DataSpedizione") ? "" : "is-invalid")}", type = "date" } })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                @Html.LabelFor(model => model.DataConsegnaPrevista, new { @class = "form-label" })
            </div>
            <div class="col">
                @Html.EditorFor(model => model.DataConsegnaPrevista, new { htmlAttributes = new { @class = $"form-control {(ViewData.ModelState.IsValidField("DataConsegnaPrevista") ? "" : "is-invalid")}", type = "date" } })
            </div>
        </div>
        <div class="row row-cols-1">
            <div class="col">
                <button type="submit" class="btn btn-success mt-3">Inserisci spedizione</button>
            </div>
        </div>
    }
</div>